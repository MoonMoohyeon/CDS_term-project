package falcons.omok.websocket;

import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.config.annotation.*;

@Configuration
@EnableWebSocketMessageBroker
public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {
    /**
     이를 통해서 ws://localhost:8080/ws/ 으로 요청이 들어오면 websocket 통신을 진행한다.
     */
    private final WebSocketHandler webSocketHandler;
    public WebSocketConfig(WebSocketHandler webSocketHandler) {
        this.webSocketHandler = webSocketHandler;
    }

    @Override
    public void registerStompEndpoints(StompEndpointRegistry registry) {
        registry.addEndpoint("/ws").setAllowedOriginPatterns("http://localhost:8080").withSockJS();
    }

    /**
     * 메시지 브로커 설정을 구성하는 함수입니다.<br/><br/>
     * setApplicationDestinationPrefixes("/app") <p>MessageMapping으로 라우팅 되는 prefix 엔드포인트를 설정한다 "/app/something" 으로 전송되는 메시지는 @MessageMapping("/something") 으로 전송된다.</p>
     * enableSimpleBroker("/topic"): <p>메시지 브로커를 활성화하고, 클라이언트가 "/topic"으로 시작하는 주제에 구독하면 해당 주제로 발행되는 메시지를 받을 수 있도록 합니다.</p>
     * setUserDestinationPrefix("/user"): <p></p>
     */
    @Override
    public void configureMessageBroker(MessageBrokerRegistry registry) {
//        registry.setApplicationDestinationPrefixes("/app");
        /*subscribe prefix 정의.*/
//        registry.enableSimpleBroker("/chatroom","/user");
        registry.enableSimpleBroker("/");
//        registry.setUserDestinationPrefix("/user");
    }
}